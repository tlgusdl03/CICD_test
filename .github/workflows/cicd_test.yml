name: Dockerizing to Amazon ECR

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리 클론
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. AWS 환경 변수 설정
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 3. AWS ECR 로그인
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: private

      # 4. 도커 이미지 빌드
      - name: Build Docker image
        run: |
          TAG=${{ github.sha }}
          export DOCKER_BUILDKIT=1
          docker build --platform linux/amd64 \
            --build-arg GIT_TOKEN="${{ secrets.GIT_TOKEN }}" \
            -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/edu/test:$TAG .

      # 5. ECR에 도커 이미지 푸시
      - name: Push to Amazon ECR
        run: |
          TAG=${{ github.sha }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/my-app:$TAG

      # 6. GitHub 사용자 설정
      - name: Set Git config
        run: |
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
